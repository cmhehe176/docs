import{_ as i,c as a,o as n,ae as t}from"./chunks/framework.CnPnaHem.js";const h="/docs/assets/hexagonal-design.DtfbUW0x.png",o=JSON.parse('{"title":"🚀 Kết hợp Hexagonal Architecture với NestJS + DDD + CQRS","description":"","frontmatter":{},"headers":[],"relativePath":"sidebars/technical-skill/2.-hexagonal-ddd-pattern.md","filePath":"sidebars/technical-skill/2.-hexagonal-ddd-pattern.md"}'),e={name:"sidebars/technical-skill/2.-hexagonal-ddd-pattern.md"};function l(k,s,p,r,F,g){return n(),a("div",null,s[0]||(s[0]=[t('<h1 id="🚀-ket-hop-hexagonal-architecture-voi-nestjs-ddd-cqrs" tabindex="-1">🚀 Kết hợp Hexagonal Architecture với NestJS + DDD + CQRS <a class="header-anchor" href="#🚀-ket-hop-hexagonal-architecture-voi-nestjs-ddd-cqrs" aria-label="Permalink to &quot;🚀 Kết hợp Hexagonal Architecture với NestJS + DDD + CQRS&quot;">​</a></h1><h2 id="🔷-1-hexagonal-architecture-la-gi" tabindex="-1">🔷 1. Hexagonal Architecture là gì? <a class="header-anchor" href="#🔷-1-hexagonal-architecture-la-gi" aria-label="Permalink to &quot;🔷 1. Hexagonal Architecture là gì?&quot;">​</a></h2><img src="'+h+`" alt="Hexagonal Architecture" style="border:10px solid #EEEEEE;border-radius:8px;"><ul><li><strong>Hexagonal Architecture</strong> (còn gọi là <strong>Ports and Adapters</strong>) là mô hình giúp tách biệt <strong>core logic (business logic)</strong> khỏi <strong>các giao diện bên ngoài</strong> như API, Database, Message Broker,... Mục tiêu của kiến trúc này là tạo ra một hệ thống linh hoạt, dễ mở rộng và kiểm thử.</li></ul><h3 id="🔹-cau-truc-chinh-cua-hexagonal-architecture" tabindex="-1">🔹 Cấu trúc chính của Hexagonal Architecture: <a class="header-anchor" href="#🔹-cau-truc-chinh-cua-hexagonal-architecture" aria-label="Permalink to &quot;🔹 Cấu trúc chính của Hexagonal Architecture:&quot;">​</a></h3><ol><li><strong>Core (Domain Layer)</strong>: Chứa <strong>Entities, Aggregates, Business Rules</strong>.</li><li><strong>Ports (Application Layer)</strong>: Định nghĩa cách Core giao tiếp với thế giới bên ngoài thông qua <strong>Command/Query Handlers, Services</strong>.</li><li><strong>Adapters (Infrastructure &amp; Presentation Layer)</strong>: Hiện thực các <strong>Repository, Controller, API, Message Bus</strong>.</li></ol><hr><h2 id="🔷-2-tich-hop-hexagonal-architecture-vao-nestjs-ddd-cqrs" tabindex="-1">🔷 2. Tích hợp Hexagonal Architecture vào NestJS + DDD + CQRS <a class="header-anchor" href="#🔷-2-tich-hop-hexagonal-architecture-vao-nestjs-ddd-cqrs" aria-label="Permalink to &quot;🔷 2. Tích hợp Hexagonal Architecture vào NestJS + DDD + CQRS&quot;">​</a></h2><h3 id="📌-cau-truc-thu-muc" tabindex="-1">📌 Cấu trúc thư mục: <a class="header-anchor" href="#📌-cau-truc-thu-muc" aria-label="Permalink to &quot;📌 Cấu trúc thư mục:&quot;">​</a></h3><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modules/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                # Các Bounded Context (User, Order, etc.)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> application/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Application Layer (Use Cases, Ports)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commands/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> queries/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> services/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> domain/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         # Domain Layer (Core Business Logic)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> entities/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repositories/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> events/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> infrastructure/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Infrastructure Layer (Adapters)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repositories/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> database/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> event-publisher/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> presentation/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # Presentation Layer (Controllers, DTOs)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> controllers/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dtos/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.module.ts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 # Thư mục chứa các thành phần dùng chung</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> constants/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # Biến toàn cục, Enum, etc.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> decorators/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         # Custom Decorators</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exceptions/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         # Global Exception Handlers</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> middlewares/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Middlewares dùng chung</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pipes/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # Validation Pipes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> utils/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # Helper functions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logger/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             # Logger Service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logger.service.ts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> database/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           # Database Service (Nếu nhiều module cần dùng chung)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prisma.service.ts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared.module.ts</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Export tất cả các thành phần dùng chung</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.ts</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 # Entry Point - Khởi động ứng dụng</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.module.ts</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           # Import các module chính</span></span></code></pre></div><hr><h2 id="🔷-3-luong-du-lieu-voi-hexagonal-architecture" tabindex="-1">🔷 3. Luồng dữ liệu với Hexagonal Architecture <a class="header-anchor" href="#🔷-3-luong-du-lieu-voi-hexagonal-architecture" aria-label="Permalink to &quot;🔷 3. Luồng dữ liệu với Hexagonal Architecture&quot;">​</a></h2><h3 id="🔽-write-path-command-them-user" tabindex="-1">🔽 <strong>Write Path (Command - Thêm User)</strong> <a class="header-anchor" href="#🔽-write-path-command-them-user" aria-label="Permalink to &quot;🔽 **Write Path (Command - Thêm User)**&quot;">​</a></h3><ol><li><strong>Client</strong> gửi <code>POST /users</code> với dữ liệu <code>{ &quot;name&quot;: &quot;John Doe&quot;, &quot;email&quot;: &quot;john@example.com&quot; }</code>.</li><li><strong>Controller (Adapter - Presentation Layer)</strong> nhận request và chuyển dữ liệu sang <strong>CommandBus</strong>.</li><li><strong>CommandBus (Port - Application Layer)</strong> gọi <strong>Command Handler</strong>.</li><li><strong>Command Handler</strong> xử lý logic, gọi <strong>UserRepository (Port - Domain Layer)</strong>.</li><li><strong>UserRepositoryImpl (Adapter - Infrastructure Layer)</strong> lưu vào database qua ORM.</li><li>Trả về kết quả cho <strong>Client</strong>.</li></ol><p>🛠 <strong>Write Path tổng quan:</strong></p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Client</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Controller</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CommandBus</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CommandHandler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Domain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Entity</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Implementation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Database</span></span></code></pre></div><h3 id="🔽-read-path-query-lay-user" tabindex="-1">🔽 <strong>Read Path (Query - Lấy User)</strong> <a class="header-anchor" href="#🔽-read-path-query-lay-user" aria-label="Permalink to &quot;🔽 **Read Path (Query - Lấy User)**&quot;">​</a></h3><ol><li><strong>Client</strong> gửi <code>GET /users/:id</code>.</li><li><strong>Controller</strong> gọi <strong>QueryBus</strong> để thực thi <code>GetUserQuery</code>.</li><li><strong>QueryBus</strong> chuyển query này tới <strong>QueryHandler (Port - Application Layer)</strong>.</li><li><strong>QueryHandler</strong> gọi <strong>UserRepository (Port - Domain Layer)</strong> để lấy dữ liệu.</li><li><strong>UserRepositoryImpl (Adapter - Infrastructure Layer)</strong> truy vấn từ Database và trả về.</li></ol><p>🛠 <strong>Read Path tổng quan:</strong></p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Client</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Controller</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> QueryBus</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> QueryHandler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Implementation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Database</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Client</span></span></code></pre></div><hr><h2 id="🔷-4-uu-điem-khi-ket-hop-hexagonal-architecture" tabindex="-1">🔷 4. Ưu điểm khi kết hợp Hexagonal Architecture <a class="header-anchor" href="#🔷-4-uu-điem-khi-ket-hop-hexagonal-architecture" aria-label="Permalink to &quot;🔷 4. Ưu điểm khi kết hợp Hexagonal Architecture&quot;">​</a></h2><p>✅ <strong>Tách biệt hoàn toàn Business Logic &amp; External Dependencies</strong>.</p><p>✅ <strong>Dễ dàng thay đổi Database, Message Bus, API mà không ảnh hưởng core logic</strong>.</p><p>✅ <strong>Tăng khả năng kiểm thử (Unit Test dễ dàng hơn)</strong>.</p><p>✅ <strong>Tổ chức module theo đúng nguyên tắc DDD, dễ maintain &amp; mở rộng</strong>.</p><p>🚀 <strong>Tóm lại</strong>, khi kết hợp <strong>Hexagonal Architecture + NestJS + DDD + CQRS</strong>, hệ thống sẽ linh hoạt hơn, dễ mở rộng và maintain lâu dài.</p>`,27)]))}const c=i(e,[["render",l]]);export{o as __pageData,c as default};
